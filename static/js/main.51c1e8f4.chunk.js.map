{"version":3,"sources":["components/employeeRow/index.js","components/header/index.js","components/search/index.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeRow","props","src","employee","image","name","phone","email","dob","header","className","Search","handleChange","useState","setSearch","htmlFor","id","placeholder","onChange","event","preventDefault","newSearch","target","value","languages","language","Promise","resolve","reject","axios","get","then","res","results","data","map","user","first","last","picture","large","date","catch","err","App","employeeList","search","developerState","setDeveloperState","useEffect","API","users","console","log","searched","onClick","tempArray","sort","a","b","sortByName","sortByPhone","sortByEmail","sortByDOB","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c1e8f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeRow(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={props.employee.image} />\r\n      </td>\r\n      <td>\r\n        <p>{props.employee.name}</p>\r\n      </td>\r\n      <td>\r\n        <p>{props.employee.phone}</p>\r\n      </td>\r\n      <td>\r\n        <p>{props.employee.email}</p>\r\n      </td>\r\n      <td>\r\n        <p>{props.employee.dob}</p>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmployeeRow;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction header() {\r\n  return (\r\n    <div className = \"row\">\r\n      <h1>Employee Directory</h1>\r\n      <p>Click on name, phone, email, or DOB to sort or enter in the search field to filter by name.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default header;","import React, {useState} from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Search({handleChange}) {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <label htmlFor=\"employeeSearch\" className=\"form-label\">Search Employees</label>\r\n            <input className=\"form-control\"id=\"employeeSearch\" placeholder=\"Type to search...\" onChange={(event) => {\r\n                event.preventDefault();\r\n                const newSearch = event.target.value;\r\n                setSearch(newSearch);\r\n                handleChange(newSearch);\r\n            }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import axios from \"axios\";\n\nconst languages = [\n  \"JavaScript\",\n  \"Python\",\n  \"C\",\n  \"Ruby\",\n  \"Java\",\n  \"PHP\",\n  \"C#\"\n];\n// Export an object containing methods we'll use for accessing the random user API\nexport default {\n  getUsersByLanguage: function(language) {\n    return new Promise((resolve, reject) => {\n      axios.get(\"https://randomuser.me/api/?results=15\").then((res) => {\n        const users = res.data.results;\n        const results = users.map((user) => {\n          return {\n            name: user.name.first + \" \" + user.name.last,\n            phone: user.phone,\n            email: user.email,\n            image: user.picture.large,\n            dob: user.dob.date,\n            last: user.name.last\n          };\n        });\n        resolve(results);\n      }).catch((err) => reject(err));\n    });\n  },\n  // Return a Promise to simulate an async call\n  getLanguagesList: function() {\n    return new Promise((resolve) => {\n      resolve(languages);\n    });\n  }\n};\n","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport EmployeeRow from \"./components/employeeRow\";\nimport Header from \"./components/header\";\nimport Search from \"./components/search\";\nimport API from \"./utils/API\";\n\nfunction App() {\n  const [developerState, setDeveloperState] = useState({\n    employeeList: [],\n    search: \"\"\n  });\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function loadUsers() {\n    API.getLanguagesList()\n      .then(languages => {\n        API.getUsersByLanguage(languages[0]).then((users) => {\n          setDeveloperState({ ...developerState, employeeList: users });\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  function parentHandleChange(searched) {\n    setDeveloperState({ ...developerState, search: searched });\n  }\n\n  function filterer(employee){\n    if (employee.name.toLowerCase().includes(developerState.search.toLowerCase())) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  function sortByName() {\n    var tempArray = developerState.employeeList;\n    tempArray.sort((a, b) => (a.name > b.name) ? 1 : -1);\n    setDeveloperState({ ...developerState, employeeList: tempArray });\n  }\n\n  function sortByPhone() {\n    var tempArray = developerState.employeeList;\n    tempArray.sort((a, b) => (a.phone > b.phone) ? 1 : -1);\n    setDeveloperState({ ...developerState, employeeList: tempArray });\n  }\n\n  function sortByEmail() {\n    var tempArray = developerState.employeeList;\n    tempArray.sort((a, b) => (a.email > b.email) ? 1 : -1);\n    setDeveloperState({ ...developerState, employeeList: tempArray });\n  }\n\n  function sortByDOB() {\n    var tempArray = developerState.employeeList;\n    tempArray.sort((a, b) => (a.dob > b.dob) ? 1 : -1);\n    setDeveloperState({ ...developerState, employeeList: tempArray });\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Search handleChange={parentHandleChange} />\n\n      <table>\n        <thead>\n          <tr>\n            <th>Image</th>\n            <th onClick={(event) => { event.preventDefault(); sortByName(); }}>Name</th>\n            <th onClick={(event) => { event.preventDefault(); sortByPhone(); }}>Phone</th>\n            <th onClick={(event) => { event.preventDefault(); sortByEmail(); }}>Email</th>\n            <th onClick={(event) => { event.preventDefault(); sortByDOB(); }}>DOB</th>\n          </tr>\n        </thead>\n        <tbody>\n          {developerState.employeeList.filter(filterer).map(employee => (\n            <EmployeeRow\n              employee={employee}\n              key={employee.id}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}